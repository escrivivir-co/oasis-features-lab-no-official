{
  "name": "oasis-dockerized",
  "version": "1.0.0",
  "description": "Dockerized Oasis project.",
  "scripts": {
    "setup": "sh ./docker-scripts/setup.sh",
    "build": "docker-compose build",
    "build:no-cache": "docker-compose build --no-cache",
    "web": "start http://localhost:3000",
    "up": "npm run setup && docker-compose up -d",
    "start": "docker-compose start",
    "stop": "docker-compose stop",
    "down": "docker-compose down -v",
    "logs": "docker-compose logs -f",
    "shell": "docker-compose exec oasis-server-dev /bin/bash",
    "backup-keys": "sh ./docker-scripts/backup-keys.sh",
    "clean": "docker-compose down -v && docker system prune -f",
    "server-only": "docker-compose run --rm -p 8008:8008 oasis-dev server",
    "status": "docker-compose ps && docker ps",
    "restart": "docker-compose restart",
    "update": "git pull && docker-compose build --no-cache && docker-compose up -d",
    "top": "docker-compose top",
    
    "ai:health": "curl -s http://localhost:4001/health | jq .",
    "ai:status": "curl -s http://localhost:4001/status | jq .",
    "ai:test": "curl -s -X POST http://localhost:4001/ai -H 'Content-Type: application/json' -d '{\"input\":\"Hello AI, are you working?\"}' | jq .",
    "ai:logs": "docker-compose logs -f oasis-server-dev | grep 'AI Service'"
  }
}
