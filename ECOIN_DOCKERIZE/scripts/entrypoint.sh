#!/bin/bash
set -e

# ECOin Docker Entrypoint Script
# Copyright (c) 2025 - ECOin Dockerized

ECOIN_USER="ecoin"
ECOIN_HOME="/home/ecoin"
ECOIN_DATA="/home/ecoin/.ecoin"
ECOIN_CONF="${ECOIN_DATA}/ecoin.conf"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    echo -e "${GREEN}[ECOin Docker]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[ECOin Docker]${NC} $1"
}

error() {
    echo -e "${RED}[ECOin Docker]${NC} $1"
    exit 1
}

# Create ECOin data directory if it doesn't exist
if [ ! -d "$ECOIN_DATA" ]; then
    log "Creating ECOin data directory: $ECOIN_DATA"
    mkdir -p "$ECOIN_DATA"
fi

# Create default ecoin.conf if it doesn't exist
if [ ! -f "$ECOIN_CONF" ]; then
    log "Creating default ecoin.conf"
    cat > "$ECOIN_CONF" << EOF
# ECOin Configuration File
# Generated by ECOin Docker

# RPC Configuration
rpcuser=${ECOIN_RPC_USER:-ecoinuser}
rpcpassword=${ECOIN_RPC_PASSWORD:-ecoinpass123}
rpcbind=${ECOIN_RPC_BIND:-127.0.0.1}
rpcport=${ECOIN_RPC_PORT:-9332}
rpcallowip=127.0.0.1
rpcallowip=172.20.0.0/16
rpcallowip=192.168.0.0/16
rpcallowip=10.0.0.0/8

# Network Configuration
port=${ECOIN_P2P_PORT:-9333}
listen=1
server=1

# Logging
debug=1
printtoconsole=1

# Performance
maxconnections=100
timeout=5000

# Security
staking=0
EOF
    # Try to set permissions, but don't fail if it doesn't work
    chmod 600 "$ECOIN_CONF" 2>/dev/null || log "Warning: Could not set permissions on ecoin.conf"
fi

# Function to start VNC server for GUI mode
start_vnc() {
    log "Starting VNC server for GUI mode"
    
    # Set VNC password
    mkdir -p ~/.vnc
    echo "ecoinvnc" | vncpasswd -f > ~/.vnc/passwd
    chmod 600 ~/.vnc/passwd
    
    # Start Xvfb
    Xvfb :1 -screen 0 1024x768x24 &
    export DISPLAY=:1
    
    # Start window manager
    fluxbox &
    
    # Start VNC server
    x11vnc -display :1 -nopw -listen localhost -xkb -rfbport 5900 -forever -shared &
    
    sleep 2
}

# Function to wait for ECOin daemon to be ready
wait_for_daemon() {
    log "Waiting for ECOin daemon to be ready..."
    local count=0
    local max_attempts=30
    
    while [ $count -lt $max_attempts ]; do
        # For stub implementation, just wait a bit and return success
        if [ -f "${ECOIN_HOME}/bin/ecoind" ]; then
            log "ECOin daemon stub is ready!"
            return 0
        fi
        
        count=$((count + 1))
        warn "Attempt $count/$max_attempts: Waiting for daemon..."
        sleep 2
    done
    
    error "ECOin daemon failed to start after $max_attempts attempts"
}

# Main execution logic
case "${1:-daemon}" in
    "daemon")
        log "Starting ECOin daemon mode..."
        exec ${ECOIN_HOME}/ecoind -conf="$ECOIN_CONF" -datadir="$ECOIN_DATA" -printtoconsole
        ;;
    
    "gui")
        log "Starting ECOin GUI mode..."
        start_vnc
        exec ${ECOIN_HOME}/ecoin-qt -conf="$ECOIN_CONF" -datadir="$ECOIN_DATA"
        ;;
    
    "miner")
        log "Starting ECOin CPU miner..."
        # Wait for daemon to be ready first
        wait_for_daemon
        exec ${ECOIN_HOME}/cpuminer --url=http://localhost:${ECOIN_RPC_PORT:-9332} --userpass=${ECOIN_RPC_USER:-ecoinuser}:${ECOIN_RPC_PASSWORD:-ecoinpass123}
        ;;
    
    "shell"|"bash")
        log "Starting interactive shell..."
        exec /bin/bash
        ;;
    
    *)
        log "Starting custom command: $*"
        exec "$@"
        ;;
esac