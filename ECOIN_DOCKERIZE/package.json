{
  "name": "ecoin-dockerized",
  "version": "1.0.0",
  "description": "ECOin P2P Crypto-Currency Wallet and Daemon - Dockerized",
  "author": "ECOin Dockerized Team",
  "license": "GPL-3.0",
  "keywords": [
    "ecoin",
    "cryptocurrency",
    "blockchain",
    "wallet",
    "docker",
    "p2p"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/epsylon/ecoin"
  },
  "scripts": {
    "info": "Run setup and replace user and password in .env; ECOIN_RPC_USER and ECOIN_RPC_PASSWORD",
    "setup": "npm run setup:dirs && npm run setup:config",
    "build": "docker-compose build",
    "build:no-cache": "docker-compose build --no-cache",
    "build:smart": "bash scripts/smart-build.sh",
    "build:source": "echo 'Set ECOIN_BUILD_MODE=source in .env and run npm run build or build:no-cache'",
    "build:binary": "echo 'Set ECOIN_BUILD_MODE=binary in .env and run npm run build:no-cache'",
    "help": "bash scripts/workflow-help.sh",
    "extract": "bash scripts/extract-bins-simple.sh",
    "download:arm64": "bash scripts/download-arm64-bins.sh",
    "build:auto": "echo 'Auto-build: detects binaries or compiles from source' && npm run build",
    "start:daemon": "docker-compose up -d ecoin-wallet",
    "start:gui": "docker-compose up -d ecoin-gui",
    "start:logs": "docker-compose up",
    "down": "docker-compose down",
    "stop": "docker-compose stop",
    "stop:remove": "docker-compose down --volumes --remove-orphans",
    "restart": "npm run stop && npm run start",
    "restart:daemon": "docker-compose restart ecoin-wallet",
    "restart:gui": "docker-compose restart ecoin-gui",
    "logs": "docker-compose logs -f",
    "logs:daemon": "docker-compose logs -f ecoin-wallet",
    "logs:gui": "docker-compose logs -f ecoin-gui",
    "logs:tail": "docker-compose logs --tail=100 -f",
    "status": "docker-compose ps",
    "shell": "docker-compose exec ecoin-wallet /bin/bash",
    "shell:gui": "docker-compose exec ecoin-gui /bin/bash",
    "backup": "npm run backup:data",
    "backup:data": "bash scripts/backup-data.sh",
    "restore:data": "echo 'Usage: npm run restore:data -- backup-file.tar.gz' && exit 1",
    "clean": "npm run stop:remove && docker system prune -f",
    "clean:bins": "rm -rf bins_* && echo 'Removed all binary directories'",
    "clean:containers": "docker-compose down --volumes --remove-orphans",
    "clean:images": "docker images | grep ecoin | awk '{print $3}' | xargs docker rmi -f 2>/dev/null || echo 'No ECOin images to remove'",
    "clean:all": "npm run clean:containers && npm run clean:images && npm run clean:bins && docker system prune -af --volumes",
    "health": "docker-compose exec ecoin-wallet /home/ecoin/ecoind getinfo",
    "wallet:info": "docker-compose exec ecoin-wallet /home/ecoin/ecoind getinfo",
    "wallet:balance": "docker-compose exec ecoin-wallet /home/ecoin/ecoind getbalance",
    "wallet:address": "docker-compose exec ecoin-wallet /home/ecoin/ecoind getnewaddress",
    "wallet:addresses": "docker-compose exec ecoin-wallet /home/ecoin/ecoind listreceivedbyaddress 0 true",
    "miner:start": "docker-compose exec ecoin-wallet /home/ecoin/cpuminer --url=http://localhost:9332 --userpass=ecoinuser:ecoinpass123",
    "network:peers": "docker-compose exec ecoin-wallet /home/ecoin/ecoind getpeerinfo",
    "network:connections": "docker-compose exec ecoin-wallet /home/ecoin/ecoind getconnectioncount",
    "rpc:help": "docker-compose exec ecoin-wallet /home/ecoin/ecoind help",
    "setup:dirs": "mkdir -p volumes/ecoin-data volumes/ecoin-gui-data volumes/logs volumes/gui-logs backups",
    "setup:config": "echo 'Setting up default configuration files...'",
    "prod": "npm run build && npm run start:daemon",
    "update": "git pull && npm run build && npm run restart",
    "vnc:info": "echo 'VNC Daemon: localhost:5900' && echo 'VNC GUI: localhost:5901' && echo 'Default VNC password: ecoinvnc'",
    "clone:psy:repo": "mkdir repos && git clone https://github.com/epsylon/ecoin.git ecoin-original",
    "docker:networks": "docker network ls",
    "docker:network:clean": "docker network rm ecoin_dockerize_ecoin-network"
  },
  "config": {
    "ecoin": {
      "rpc_port": 9332,
      "p2p_port": 9333,
      "vnc_port": 5900,
      "gui_vnc_port": 5901
    }
  },
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "peerDependencies": {}
}